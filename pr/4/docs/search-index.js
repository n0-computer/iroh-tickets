var searchIndex = new Map(JSON.parse('[["iroh_tickets",{"t":"PTPGPKPNNNNNNNCNNNNNMNNNNMNNNNNNOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNNNN","n":["Encoding","KIND","Kind","ParseError","Postcard","Ticket","Verify","as_error_source","backtrace","borrow","borrow_mut","cause","description","deserialize","endpoint","fmt","","from","","","from_bytes","in_current_span","into","serialize","source","to_bytes","to_string","try_from","try_into","type_id","verification_failed","wrong_prefix","backtrace","","","","expected","message","source","","span_trace","","","","EndpointTicket","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deserialize","endpoint_addr","eq","fmt","","from","","from_bytes","from_str","into","new","serialize","to_bytes","to_owned","to_string","try_from","try_into","type_id"],"q":[[0,"iroh_tickets"],[32,"iroh_tickets::ParseError"],[44,"iroh_tickets::endpoint"],[68,"core::error"],[69,"backtrace::capture"],[70,"core::option"],[71,"core::result"],[72,"core::fmt"],[73,"data_encoding"],[74,"postcard::error"],[75,"alloc::string"],[76,"alloc::vec"],[77,"core::any"],[78,"serde_core::de"],[79,"iroh_base::endpoint_addr"],[80,"serde_core::ser"]],"i":"fA`1`1`11111110`11111011010111111CbCdCfCh30213210`Bf0000000000000000000000","f":"```````{b{{b{d}}}}{{{b{f}}}{{j{{b{h}}}}}}{b{{b{c}}}{}}{{{b{l}}}{{b{lc}}}{}}{{{b{f}}}{{j{{b{d}}}}}}{{{b{f}}}{{b{n}}}}{{{b{n}}}{{Ab{A`f}}}}`{{{b{f}}{b{lAd}}}Af}0{cc{}}{Ahf}{Ajf}{{{b{{An{Al}}}}}{{Ab{A`f}}}}{{}}{{}c{}}{{{b{A`}}}B`}:{{{b{A`}}}{{Bb{Al}}}}{bB`}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bBd}{{{b{n}}}f}0`````````````{b{{b{c}}}{}}{{{b{l}}}{{b{lc}}}{}}{{{b{Bf}}}Bf}{{b{b{lc}}}Bh{}}{{bAl}Bh}{c{{Ab{Bf}}}Bj}{{{b{Bf}}}{{b{Bl}}}}{{{b{Bf}}{b{Bf}}}Bn}{{{b{Bf}}{b{lAd}}}Af}0{cc{}}{BlBf}{{{b{{An{Al}}}}}{{Ab{Bff}}}}{{{b{n}}}{{Ab{Bfc}}}{}}{{}c{}}3{{{b{Bf}}c}AbC`}{{{b{Bf}}}{{Bb{Al}}}}{bc{}}{bB`}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{bBd}","D":"C`","p":[[1,"reference",null,null,1],[10,"Error",68],[6,"ParseError",0],[5,"Backtrace",69],[6,"Option",70,null,1],[0,"mut"],[1,"str"],[10,"Ticket",0],[6,"Result",71,null,1],[5,"Formatter",72],[8,"Result",72],[5,"DecodeError",73],[6,"Error",74],[1,"u8"],[1,"slice"],[5,"String",75],[5,"Vec",76],[5,"TypeId",77],[5,"EndpointTicket",44],[1,"unit"],[10,"Deserializer",78],[5,"EndpointAddr",79],[1,"bool"],[10,"Serializer",80],[15,"Kind",32],[15,"Postcard",32],[15,"Encoding",32],[15,"Verify",32]],"r":[],"b":[[15,"impl-Debug-for-ParseError"],[16,"impl-Display-for-ParseError"],[18,"impl-From%3CDecodeError%3E-for-ParseError"],[19,"impl-From%3CError%3E-for-ParseError"],[53,"impl-Debug-for-EndpointTicket"],[54,"impl-Display-for-EndpointTicket"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACwADAAIAAUAEAABABMAAQAWAAAAGQAAABsAAwAhAAMAJgAGAC4ABQA1AAIAOgABAD4ABgA=","P":[[9,"T"],[11,""],[17,"T"],[18,""],[22,"U"],[23,""],[27,"U,T"],[28,"U"],[29,""],[45,"T"],[47,""],[48,"T"],[49,""],[50,"D"],[51,""],[55,"T"],[56,""],[58,"FromStr::Err"],[59,"U"],[60,""],[61,"S"],[62,""],[63,"T"],[64,""],[65,"U,T"],[66,"U"],[67,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2938]}